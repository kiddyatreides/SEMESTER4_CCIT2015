//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace _4SC1WCFClient.CalculatorWebRef {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CalculatorWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CalculatorWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback addNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback substractNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback multiplyNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback divideNumberOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CalculatorWebService() {
            this.Url = global::_4SC1WCFClient.Properties.Settings.Default._4SC1WCFClient_CalculatorWebRef_CalculatorWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event addNumberCompletedEventHandler addNumberCompleted;
        
        /// <remarks/>
        public event substractNumberCompletedEventHandler substractNumberCompleted;
        
        /// <remarks/>
        public event multiplyNumberCompletedEventHandler multiplyNumberCompleted;
        
        /// <remarks/>
        public event divideNumberCompletedEventHandler divideNumberCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int addNumber(int num1, int num2) {
            object[] results = this.Invoke("addNumber", new object[] {
                        num1,
                        num2});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addNumberAsync(int num1, int num2) {
            this.addNumberAsync(num1, num2, null);
        }
        
        /// <remarks/>
        public void addNumberAsync(int num1, int num2, object userState) {
            if ((this.addNumberOperationCompleted == null)) {
                this.addNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNumberOperationCompleted);
            }
            this.InvokeAsync("addNumber", new object[] {
                        num1,
                        num2}, this.addNumberOperationCompleted, userState);
        }
        
        private void OnaddNumberOperationCompleted(object arg) {
            if ((this.addNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addNumberCompleted(this, new addNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/substractNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int substractNumber(int num1, int num2) {
            object[] results = this.Invoke("substractNumber", new object[] {
                        num1,
                        num2});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void substractNumberAsync(int num1, int num2) {
            this.substractNumberAsync(num1, num2, null);
        }
        
        /// <remarks/>
        public void substractNumberAsync(int num1, int num2, object userState) {
            if ((this.substractNumberOperationCompleted == null)) {
                this.substractNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubstractNumberOperationCompleted);
            }
            this.InvokeAsync("substractNumber", new object[] {
                        num1,
                        num2}, this.substractNumberOperationCompleted, userState);
        }
        
        private void OnsubstractNumberOperationCompleted(object arg) {
            if ((this.substractNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.substractNumberCompleted(this, new substractNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/multiplyNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int multiplyNumber(int num1, int num2) {
            object[] results = this.Invoke("multiplyNumber", new object[] {
                        num1,
                        num2});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void multiplyNumberAsync(int num1, int num2) {
            this.multiplyNumberAsync(num1, num2, null);
        }
        
        /// <remarks/>
        public void multiplyNumberAsync(int num1, int num2, object userState) {
            if ((this.multiplyNumberOperationCompleted == null)) {
                this.multiplyNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmultiplyNumberOperationCompleted);
            }
            this.InvokeAsync("multiplyNumber", new object[] {
                        num1,
                        num2}, this.multiplyNumberOperationCompleted, userState);
        }
        
        private void OnmultiplyNumberOperationCompleted(object arg) {
            if ((this.multiplyNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.multiplyNumberCompleted(this, new multiplyNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/divideNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int divideNumber(int num1, int num2) {
            object[] results = this.Invoke("divideNumber", new object[] {
                        num1,
                        num2});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void divideNumberAsync(int num1, int num2) {
            this.divideNumberAsync(num1, num2, null);
        }
        
        /// <remarks/>
        public void divideNumberAsync(int num1, int num2, object userState) {
            if ((this.divideNumberOperationCompleted == null)) {
                this.divideNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OndivideNumberOperationCompleted);
            }
            this.InvokeAsync("divideNumber", new object[] {
                        num1,
                        num2}, this.divideNumberOperationCompleted, userState);
        }
        
        private void OndivideNumberOperationCompleted(object arg) {
            if ((this.divideNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.divideNumberCompleted(this, new divideNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void addNumberCompletedEventHandler(object sender, addNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void substractNumberCompletedEventHandler(object sender, substractNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class substractNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal substractNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void multiplyNumberCompletedEventHandler(object sender, multiplyNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class multiplyNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal multiplyNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void divideNumberCompletedEventHandler(object sender, divideNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class divideNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal divideNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591